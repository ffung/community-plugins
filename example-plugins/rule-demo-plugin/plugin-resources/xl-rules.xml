<?xml version="1.0" encoding="UTF-8"?>
<rules xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.xebialabs.com/xl-deploy/xl-rules" >


    <rule name="startStopServer" scope="plan">
        <script-ref ref="scripts/start-stop-server.py"/>
    </rule>



    <rule name="deployArtifact" scope="deployed">
    	<type>example.Artifact</type>
    	<operation>CREATE</operation>
    	<operation>MODIFY</operation>
    	<steps>
    		<execute-remote-os-script>
    			<description>"Deploy " + deployed.name + " to " + deployed.container.name</description>
    			<order>60</order>
    			<container>deployed.container.getProperty("host")</container>
    			<script-template-path>"scripts/deploy-artifact"</script-template-path>
    			<derived-artifact>deployed</derived-artifact>
    			<vars>{'deployed': deployed}</vars>
    		</execute-remote-os-script>
    		<success>
    			<description>"Step to " + delta.getOperation().toString() + " artifact with name " + currentDeployed(delta).getName()</description>
    			<order>70</order>
    		</success>
    	</steps>
    </rule>



    <rule name="deployResource" scope="deployed">
    	<type>example.Resource</type>
    	<operation>CREATE</operation>
    	<operation>MODIFY</operation>
    	<steps>
            <copy-artifact>
                <description>"Create Resource"</description>
                <order>50</order>
                <source-file>deployed.file</source-file>
                <container>deployed.container.getProperty("host")</container>
                <target-path>deployed.container.getProperty("home") + "/resources"</target-path>
                <target-file-name>deployed.file.name</target-file-name>
                <create-target-path>True</create-target-path>
            </copy-artifact>
    	</steps>
    </rule>
    <rule name="destroyResource" scope="deployed">
        <script><![CDATA[
if (deployed.getType().toString() == 'example.Resource' and delta.operation.toString() == 'DESTROY'):
    context.addStep(steps.delete_artifact(
        description = "Delete Resource",
        order = 50,
        container = deployed.container.getProperty("host"),
        target_directory = deployed.container.getProperty("home") + "/resources",
        target_file = deployed.file.name))
        ]]></script>
    </rule>



    <rule name="deployDatasource" scope="deployed">
    	<type>example.Datasource</type>
    	<operation>CREATE</operation>
    	<operation>MODIFY</operation>
    	<steps>
            <resolve-template>
    			<description>"Deploy " + deployed.name + " to " + deployed.container.name</description>
                <order>50</order>
                <container>deployed.container.getProperty("host")</container>
                <target-path>deployed.container.getProperty("home") + "/conf"</target-path>
                <target-file-name>deployed.name</target-file-name>
                <create-target-path>True</create-target-path>
                <template-path>"templates/datasource.ftl"</template-path>
                <vars>{"deployed": deployed, "prop": "myProp"}</vars>
            </resolve-template>
    	</steps>
    </rule>



    <rule name="emailRule" scope="post-plan">
        <script>
<![CDATA[

email = currentDeployedApplication(specification).getProperty("email")

if(specification.getOperation() != Operation.NOOP and email is not None):
	context.addStep(steps.success(description = "Sending an email to " + email + " that deployment is finished", order = 50))

]]>
        </script>
    </rule>



</rules>
